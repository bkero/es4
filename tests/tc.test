// See "parse.test" for information about the unit test file format.

%% [int literal] verify, pass
1

%% [double literal] verify, pass
1.23

%% [null literal] verify, pass
null

%% [true literal] verify, pass
true

%% [false literal] verify, pass
false

%% [string literal] verify, pass
"string"

%% [structurally typed array literal] verify, pass
[0] : [Number]

%% [structurally typed array literal] verify, pass
[0, true, "blue"] : [Number, boolean, string]

%% [nominally typed array literal] verify, pass
[1, 2, "foo"] : Array

%% [untyped array literal] verify, pass
[1, 2, "bar"] 

%% [dynamically typed array literal] verify, pass
[1, 2, "bar"] : *

%% [loosely typed array literal] verify, pass
[1, 2, "baz"] : Object

// cannot infer object types yet
//%% [structurally typed object literal] verify, pass
//({} : {})

//%% [dynamically typed object literal] verify, pass
//{} : *

//%% [untyped object literal] verify, pass
//{}

//%% [structurally typed object literal] verify, pass
//{ x: 0, y: true, z: "blue" } : { x: Number, y: Boolean }

//%% [structurally typed object literal] verify, pass
//{ x: 0, y: true, z: "blue" } : { x: Number, y: Boolean, z: String }

%% [let1] verify, pass
let (x=1) x

%% [let2] verify, pass
let (x=1) let (y=x) y

%% [let3] verify, pass
let (z=2,y=3) y

%% [comma] verify, pass
1,2,"abc"

%% [this] verify, pass
this

%% [fn0] verify, pass
(function f(){})

%% [fn1] verify, pass
   (function f(x:Number):Number { return 1 });

%% [fn2] verify, pass
(function f(x:Number):Number { return 1 }) (4);

%% [fn3] verify, pass
(function f(x:Number,y):Number { return 1 }) (4,5);

%% [fn3a] verify, fail
(function f(x:Number,y):Number { return 1 }) (4);

%% [fn3b] verify, fail
(function f(x:Number,y):Number { return 1 }) ();

%% [fn3c] verify, fail
(function f(x:Number,y):Number { return 1 }) (4,5,6);

%% [fn4] verify, pass
let (f=function f() {}) f(3);

%% [fn6] verify, pass
(type function(Number):Number);

%% [fn5] verify, pass
let (f:function(Number):Number=function f(x:Number):Number {return x}) f(3);

%% [fn7] verify, pass
(function f(...x):Number { return 1 }) (4);

%% [fn7a] verify, pass
(function f(...x):Number { return 1 }) (4,true,7);

%% [fn7b] verify, pass
(function f(y,...x):Number { return 1 }) (4);

%% [fn7c] verify, fail
(function f(y,z,...x):Number { return 1 }) (4);

%% [fn8] verify, pass
function f.<X>(x:X):X { return x};

%% [fn8a] verify, pass
function f.<X>(x:X):X { return 1};

%% [fn8b] verify, fail
function f.<X>(x:Y):X { return x};

%% [fn8c] verify, fail
function f.<X>(x:X):Y { return x};

%% [fn9] verify, pass
let (f=1) f(3)

%% [function defn] verify, pass
function f(x) { return x; }
 
%% [fn51] verify, pass
let (f:* =function f(x:Number):Number {return x}) f(3);
 
%% [fn52] verify, pass
let (f:  function(Number):Number   =function f(x:Number):Number {return x}) f(3);

%% [fn53] verify, pass
let (f:function(*):* =function f(x:Number):Number {return x}) f(3);

%% [fn54] verify, pass
let (f:function(Number):Number=function f(x:Number):Number {return x}) f(3);

%% [fn55a] verify, pass
let (f:function(Number)=function f(x:Number):Number {return x}) f(3);

%% [fn55b] verify, pass
let (f:function(*)=function f(x:Number):Number {return x}) f(3);

%% [fn55c] verify, fail
let (f:function()=function f(x:Number):Number {return x}) f(3);

%% [fn55d] verify, pass
let (f:function(Number)=function f(x:Number):Number {return x}) f(3);

%% [fn56] verify, pass
let (f:function(Number):Number=function f(x) {return x}) f(3);

%% [badtype] verify, fail
var x:Number;
x="string";

%% [fns1] verify, pass
var f : function(Number):Number;
f = function(g:Number):Number { return g; };

%% [fns2] verify, pass
var f : function(Number):*;
f = function(g:Number):Number { return g; };

%% [fns3] verify, pass
var f : function(*):Number;
f = function(g:Number):Number { return g; };

%% [fns4] verify, pass
var f : function(*):*;
f = function(g:Number):Number { return g; };

%% [fns5] verify, pass
var f : function(Number):Number;
f = function(g:Number):* { return g; };




%% [objref1] verify, pass
let (x=1) x.y;

%% [objref2] verify, fail
let x:{}=1;

%% [objref3] verify, pass
let (x={y:1}) x.y;

%% [objref4] verify, fail
let (x:{}={y:1}) 
    x.y;

%% [objref5] verify, pass
let (x:{y:Number}={y:1}) x.y;

%% [objref6] verify, pass
let (x:{y:*}={y:1}) x.y;




%% [generic1] verify, pass
var f : function.<X>(Number):Number;

%% [generic2a-fail] verify, pass
class C.<T> {}

%% [generic2b-fail] verify, pass
class C.<T> {
      function get() : C.<T> {
      }
}

%% [generic2c-fail] verify, pass
class C.<T> {
      function get() : C.<T> {
         return new C.<T>();
      }
}

%% [catch1] verify, pass
try {} catch(e) {}

%% [Number.NaN-fail] verify, pass
Number.NaN

%% [Number.POSITIVE_INFINITY-fail] verify, pass
Number.POSITIVE_INFINITY













